import React, { useState } from "react"
import { Link } from "gatsby"

import { Dropdown, DropdownWork } from "./dropdown"

export const ButtonCompact = props => {
  return (
    <button type={props.type} className="button w-32 h-7 bg-brand text-white">
      {props.text}
    </button>
  )
}

export const ButtonMedium = props => {
  return (
    <button
      type={props.type}
      className="button w-auto h-8 bg-brand text-white px-8 z-10"
    >
      {props.text}
    </button>
  )
}

export const ButtonLarge = props => {
  return (
    <Link to={props.to}>
      <button
        type={props.type}
        className="button h-10 bg-brand text-white px-8 z-50"
      >
        {props.text}
      </button>
    </Link>
  )
}

export const ButtonOutline = props => {
  return (
    <button
      type={props.type}
      className="button w-32 h-8 bg-white text-black border border-black"
    >
      {props.text}
    </button>
  )
}

export const ButtonDisabled = props => {
  return (
    <button
      type={props.type}
      className="button w-32 h-8 bg-lt-concrete text-concrete-gray"
    >
      {props.text}
    </button>
  )
}

export const ButtonDropdown = props => {
  const [display, setDisplay] = useState("hidden")
  return (
    <div className="flex flex-col">
      <button
        type={props.type}
        className="button flex justify-around items-center w-32 h-8 bg-white text-black border border-black"
        onClick={() =>
          display === "hidden" ? setDisplay("block") : setDisplay("hidden")
        }
      >
        {props.text}
        <svg
          width="25"
          height="24"
          viewBox="0 0 25 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19.6293 9L12.1293 16.5L4.62927 9"
            stroke="black"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </button>
      <div className={display}>
        <Dropdown />
      </div>
    </div>
  )
}

export const ButtonDropdownNav = props => {
  const [display, setDisplay] = useState("hidden")
  return (
    <div className="flex flex-col w-52">
      <button
        className="link flex justify-around items-center bg-white text-black "
        onClick={() =>
          display === "hidden" ? setDisplay("block") : setDisplay("hidden")
        }
      >
        {props.text}
        <svg
          className="ml-1"
          width="25"
          height="24"
          viewBox="0 0 25 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19.6293 9L12.1293 16.5L4.62927 9"
            stroke="#E09143"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </button>
      <div className={display}>
        <DropdownWork />
      </div>
    </div>
  )
}

export const ButtonDropdownIcon = props => {
  const [display, setDisplay] = useState("hidden")
  return (
    <div className="absolute top-3 flex flex-col pl-3 lg:hidden">
      <button
        type={props.type}
        className="button flex justify-around items-center w-10 h-8 bg-white text-black border border-black z-50"
        onClick={() =>
          display === "hidden" ? setDisplay("block") : setDisplay("hidden")
        }
      >
        <svg
          width="25"
          height="24"
          viewBox="0 0 25 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19.6293 9L12.1293 16.5L4.62927 9"
            stroke="black"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </button>
      <div className={display} onClick={() => setDisplay("hidden")}>
        <Dropdown />
      </div>
    </div>
  )
}

export const ButtonIcon = props => {
  return (
    <button className="mt-2 button flex justify-center items-center w-full lg:w-auto lg:px-2 lg:ml-auto px-3 h-8 bg-brand text-white border">
      {props.text}
      <svg
        className="ml-3"
        width="25"
        height="25"
        viewBox="0 0 25 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12.5455 20.8474H4.63922C4.4486 20.8474 4.26578 20.7717 4.13099 20.6369C3.9962 20.5021 3.92047 20.3193 3.92047 20.1287V12.2224C3.92047 11.0897 4.14356 9.96819 4.57701 8.92176C5.01046 7.87533 5.64577 6.92451 6.44667 6.12361C7.24757 5.32271 8.19839 4.6874 9.24482 4.25395C10.2912 3.8205 11.4128 3.59741 12.5455 3.59741H12.5455C13.6781 3.59741 14.7997 3.8205 15.8461 4.25395C16.8925 4.6874 17.8434 5.32271 18.6443 6.12362C19.4452 6.92452 20.0805 7.87533 20.5139 8.92177C20.9474 9.9682 21.1705 11.0898 21.1705 12.2224V12.2224C21.1705 14.5099 20.2618 16.7037 18.6443 18.3212C17.0268 19.9387 14.833 20.8474 12.5455 20.8474Z"
          stroke="white"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M12.5455 13.7231C13.1668 13.7231 13.6705 13.2195 13.6705 12.5981C13.6705 11.9768 13.1668 11.4731 12.5455 11.4731C11.9242 11.4731 11.4205 11.9768 11.4205 12.5981C11.4205 13.2195 11.9242 13.7231 12.5455 13.7231Z"
          fill="white"
        />
        <path
          d="M8.04547 13.7231C8.66679 13.7231 9.17047 13.2195 9.17047 12.5981C9.17047 11.9768 8.66679 11.4731 8.04547 11.4731C7.42415 11.4731 6.92047 11.9768 6.92047 12.5981C6.92047 13.2195 7.42415 13.7231 8.04547 13.7231Z"
          fill="white"
        />
        <path
          d="M17.0455 13.7231C17.6668 13.7231 18.1705 13.2195 18.1705 12.5981C18.1705 11.9768 17.6668 11.4731 17.0455 11.4731C16.4242 11.4731 15.9205 11.9768 15.9205 12.5981C15.9205 13.2195 16.4242 13.7231 17.0455 13.7231Z"
          fill="white"
        />
      </svg>
    </button>
  )
}

export const ButtonIconOnly = props => {
  return (
    <button
      type={props.type}
      className="button flex items-center justify-center w-12 h-8 bg-brand text-white border"
    >
      <svg
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0)">
          <path
            d="M23.0764 11.4173L20.7592 12.5759L17.7592 6.83076L20.1 5.66033C20.2759 5.57239 20.4793 5.55704 20.6663 5.61758C20.8534 5.67811 21.0092 5.8097 21.1003 5.98399L23.4058 10.3993C23.4519 10.4876 23.48 10.5842 23.4884 10.6835C23.4967 10.7827 23.4853 10.8826 23.4546 10.9774C23.4239 11.0722 23.3747 11.1599 23.3098 11.2354C23.2448 11.3109 23.1655 11.3728 23.0764 11.4173V11.4173Z"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M4.25921 12.4755L1.94193 11.3169C1.85285 11.2723 1.77353 11.2105 1.7086 11.1349C1.64367 11.0594 1.59444 10.9717 1.56377 10.8769C1.53311 10.7822 1.52163 10.6823 1.53 10.583C1.53837 10.4838 1.56642 10.3872 1.61252 10.2989L3.91811 5.88353C4.00912 5.70924 4.16495 5.57765 4.35202 5.51711C4.5391 5.45658 4.74247 5.47193 4.91834 5.55986L7.25921 6.7303L4.25921 12.4755Z"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M20.7592 12.576L19.2592 14.3308L15.8094 17.7805C15.7178 17.8721 15.6041 17.9384 15.4793 17.973C15.3545 18.0075 15.2228 18.0092 15.0972 17.9778L9.66373 16.6194C9.56182 16.594 9.46639 16.5473 9.38364 16.4826L4.25916 12.4755"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M19.2592 14.3308L15.1342 11.3308L13.9342 12.2308C13.4149 12.6202 12.7833 12.8308 12.1342 12.8308C11.4851 12.8308 10.8535 12.6202 10.3342 12.2308L9.826 11.8496C9.74004 11.7852 9.66893 11.703 9.6175 11.6086C9.56607 11.5143 9.53551 11.41 9.52789 11.3028C9.52027 11.1956 9.53577 11.088 9.57335 10.9874C9.61092 10.8867 9.66969 10.7953 9.74567 10.7193L13.4145 7.05045C13.4842 6.98081 13.5668 6.92556 13.6578 6.88787C13.7488 6.85018 13.8464 6.83078 13.9449 6.83078H17.7592"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M7.31299 6.73029L12.1242 5.32764C12.2961 5.27754 12.4802 5.29056 12.6433 5.36436L15.8841 6.83077"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M11.0092 19.9558L8.18358 19.2494C8.06892 19.2207 7.96266 19.1654 7.87346 19.0878L5.75916 17.25"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </g>
        <defs>
          <clipPath id="clip0">
            <rect
              width="24"
              height="24"
              fill="white"
              transform="translate(0.509155)"
            />
          </clipPath>
        </defs>
      </svg>
    </button>
  )
}

export const ToggleOn = () => {
  return (
    <>
      <div className="flex items-center w-11 h-6 bg-brand rounded-full p-0.5">
        <div className="flex items-center justify-center w-5 h-5 bg-white rounded-full">
          <svg
            width="14"
            height="13"
            viewBox="0 0 14 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M7 0C7.16877 0 7.33064 0.0622563 7.44998 0.173073C7.56932 0.28389 7.63636 0.43419 7.63636 0.590909V1.77273C7.63636 1.92945 7.56932 2.07975 7.44998 2.19056C7.33064 2.30138 7.16877 2.36364 7 2.36364C6.83123 2.36364 6.66936 2.30138 6.55002 2.19056C6.43068 2.07975 6.36364 1.92945 6.36364 1.77273V0.590909C6.36364 0.43419 6.43068 0.28389 6.55002 0.173073C6.66936 0.0622563 6.83123 0 7 0ZM3.18182 6.5C3.18182 5.55969 3.58409 4.65789 4.30014 3.99299C5.01619 3.32808 5.98736 2.95455 7 2.95455C8.01264 2.95455 8.98381 3.32808 9.69986 3.99299C10.4159 4.65789 10.8182 5.55969 10.8182 6.5C10.8182 7.44031 10.4159 8.34211 9.69986 9.00702C8.98381 9.67192 8.01264 10.0455 7 10.0455C5.98736 10.0455 5.01619 9.67192 4.30014 9.00702C3.58409 8.34211 3.18182 7.44031 3.18182 6.5ZM7 4.13636C6.3249 4.13636 5.67746 4.38539 5.20009 4.82866C4.72273 5.27192 4.45455 5.87312 4.45455 6.5C4.45455 7.12687 4.72273 7.72808 5.20009 8.17134C5.67746 8.61461 6.3249 8.86364 7 8.86364C7.6751 8.86364 8.32254 8.61461 8.79991 8.17134C9.27727 7.72808 9.54545 7.12687 9.54545 6.5C9.54545 5.87312 9.27727 5.27192 8.79991 4.82866C8.32254 4.38539 7.6751 4.13636 7 4.13636ZM7.63636 11.2273C7.63636 11.0706 7.56932 10.9203 7.44998 10.8094C7.33064 10.6986 7.16877 10.6364 7 10.6364C6.83123 10.6364 6.66936 10.6986 6.55002 10.8094C6.43068 10.9203 6.36364 11.0706 6.36364 11.2273V12.4091C6.36364 12.5658 6.43068 12.7161 6.55002 12.8269C6.66936 12.9377 6.83123 13 7 13C7.16877 13 7.33064 12.9377 7.44998 12.8269C7.56932 12.7161 7.63636 12.5658 7.63636 12.4091V11.2273ZM14 6.5C14 6.65672 13.933 6.80702 13.8136 6.91784C13.6943 7.02865 13.5324 7.09091 13.3636 7.09091H12.0909C11.9221 7.09091 11.7603 7.02865 11.6409 6.91784C11.5216 6.80702 11.4545 6.65672 11.4545 6.5C11.4545 6.34328 11.5216 6.19298 11.6409 6.08216C11.7603 5.97135 11.9221 5.90909 12.0909 5.90909H13.3636C13.5324 5.90909 13.6943 5.97135 13.8136 6.08216C13.933 6.19298 14 6.34328 14 6.5ZM1.90909 7.09091C2.07787 7.09091 2.23973 7.02865 2.35907 6.91784C2.47841 6.80702 2.54545 6.65672 2.54545 6.5C2.54545 6.34328 2.47841 6.19298 2.35907 6.08216C2.23973 5.97135 2.07787 5.90909 1.90909 5.90909H0.636364C0.467589 5.90909 0.305728 5.97135 0.186387 6.08216C0.0670452 6.19298 0 6.34328 0 6.5C0 6.65672 0.0670452 6.80702 0.186387 6.91784C0.305728 7.02865 0.467589 7.09091 0.636364 7.09091H1.90909ZM11.9496 1.90391C12.0689 2.01472 12.136 2.16499 12.136 2.32168C12.136 2.47837 12.0689 2.62864 11.9496 2.73945L11.0498 3.575C10.9911 3.63144 10.9209 3.67645 10.8433 3.70742C10.7656 3.73839 10.6821 3.75469 10.5976 3.75538C10.5131 3.75606 10.4293 3.74111 10.3511 3.71139C10.2729 3.68168 10.2019 3.63781 10.1421 3.58232C10.0824 3.52684 10.0351 3.46087 10.0031 3.38825C9.97112 3.31562 9.95501 3.23781 9.95575 3.15935C9.95648 3.08089 9.97404 3.00335 10.0074 2.93126C10.0407 2.85917 10.0892 2.79396 10.15 2.73945L11.0498 1.90391C11.1692 1.79313 11.331 1.7309 11.4997 1.7309C11.6685 1.7309 11.8303 1.79313 11.9496 1.90391ZM3.85 10.2605C3.91078 10.206 3.95926 10.1408 3.99261 10.0687C4.02596 9.99664 4.04352 9.91911 4.04425 9.84064C4.04498 9.76218 4.02888 9.68437 3.99689 9.61175C3.96489 9.53913 3.91764 9.47316 3.85789 9.41768C3.79814 9.36219 3.72709 9.31832 3.64888 9.28861C3.57067 9.25889 3.48688 9.24394 3.40238 9.24462C3.31788 9.24531 3.23438 9.26161 3.15674 9.29258C3.0791 9.32354 3.00888 9.36856 2.95018 9.425L2.05036 10.2605C1.98958 10.3151 1.9411 10.3803 1.90775 10.4524C1.8744 10.5244 1.85685 10.602 1.85611 10.6804C1.85538 10.7589 1.87148 10.8367 1.90348 10.9093C1.93547 10.982 1.98273 11.0479 2.04248 11.1034C2.10223 11.1589 2.17328 11.2028 2.25148 11.2325C2.32969 11.2622 2.41349 11.2771 2.49798 11.2765C2.58248 11.2758 2.66598 11.2595 2.74362 11.2285C2.82126 11.1975 2.89148 11.1525 2.95018 11.0961L3.85 10.2605ZM2.05036 1.90391C2.1697 1.79313 2.33153 1.7309 2.50027 1.7309C2.66901 1.7309 2.83085 1.79313 2.95018 1.90391L3.85 2.73945C3.91078 2.79396 3.95926 2.85917 3.99261 2.93126C4.02596 3.00335 4.04352 3.08089 4.04425 3.15935C4.04498 3.23781 4.02888 3.31562 3.99689 3.38825C3.96489 3.46087 3.91764 3.52684 3.85789 3.58232C3.79814 3.63781 3.72709 3.68168 3.64888 3.71139C3.57067 3.74111 3.48688 3.75606 3.40238 3.75538C3.31788 3.75469 3.23438 3.73839 3.15674 3.70742C3.0791 3.67645 3.00888 3.63144 2.95018 3.575L2.05036 2.73945C1.93106 2.62864 1.86404 2.47837 1.86404 2.32168C1.86404 2.16499 1.93106 2.01472 2.05036 1.90391ZM11.0498 9.425C10.9298 9.31736 10.7691 9.2578 10.6022 9.25915C10.4353 9.26049 10.2757 9.32264 10.1578 9.4322C10.0398 9.54176 9.97284 9.68996 9.97139 9.8449C9.96994 9.99983 10.0341 10.1491 10.15 10.2605L11.0498 11.0961C11.1698 11.2037 11.3306 11.2633 11.4974 11.2619C11.6643 11.2606 11.8239 11.1985 11.9419 11.0889C12.0599 10.9793 12.1268 10.8311 12.1282 10.6762C12.1297 10.5213 12.0656 10.372 11.9496 10.2605L11.0498 9.425Z"
              fill="#FFA144"
            />
          </svg>
        </div>
      </div>

      <div className="flex items-center w-11 h-6 bg-gray-200 rounded-full p-0.5">
        <div className="flex items-center transform translate-x-5 justify-center w-5 h-5 bg-white rounded-full" />
      </div>
    </>
  )
}

export const ButtonCTAWhite = props => {
  return (
    <>
      <button className="button w-72 h-9 border border-black bg-white text-black ">
        {props.text}
      </button>
    </>
  )
}
export const ButtonCTAOrange = props => {
  return (
    <>
      <button className="button w-72 h-9  bg-brand text-white">
        {props.text}
      </button>
    </>
  )
}

export const ButtonLink = () => {
  return (
    <>
      <svg
        width="197"
        height="36"
        viewBox="0 0 197 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g filter="url(#filter0_d)">
          <rect x="1" y="1" width="193" height="32" rx="6" fill="#E09143" />
          <path
            d="M34.136 12.76V22H32.204V12.76H34.136ZM50.1905 15H52.2345L49.9945 22H47.7825L46.2565 17.24L44.7865 22H42.5745L40.3345 15H42.3785L43.7785 20.362L45.3325 15H47.2365L48.8045 20.362L50.1905 15ZM57.7248 17.534C57.7248 17.1327 57.6081 16.82 57.3748 16.596C57.1508 16.372 56.8521 16.26 56.4788 16.26C56.1335 16.26 55.8301 16.3487 55.5688 16.526C55.3075 16.7033 55.1161 16.9973 54.9948 17.408L53.3568 16.904C53.5155 16.288 53.8608 15.7933 54.3928 15.42C54.9341 15.0467 55.6575 14.86 56.5628 14.86C57.4775 14.86 58.2148 15.0793 58.7748 15.518C59.3441 15.9473 59.6288 16.5913 59.6288 17.45V20.292C59.6288 20.6467 59.7968 20.824 60.1328 20.824C60.2915 20.824 60.4408 20.8007 60.5808 20.754L60.4688 21.944C60.2261 22.0653 59.9228 22.126 59.5588 22.126C59.1575 22.126 58.8075 22.042 58.5088 21.874C58.2195 21.706 58.0235 21.454 57.9208 21.118C57.6968 21.454 57.3748 21.7107 56.9548 21.888C56.5441 22.056 56.1195 22.14 55.6808 22.14C54.9715 22.14 54.4068 21.9813 53.9868 21.664C53.5761 21.3373 53.3708 20.866 53.3708 20.25C53.3708 19.7273 53.5388 19.3027 53.8748 18.976C54.2108 18.64 54.6915 18.4113 55.3168 18.29L57.7248 17.8V17.534ZM55.2888 20.068C55.2888 20.3013 55.3728 20.4787 55.5408 20.6C55.7181 20.7213 55.9281 20.782 56.1708 20.782C56.4415 20.782 56.6935 20.74 56.9268 20.656C57.1601 20.572 57.3515 20.432 57.5008 20.236C57.6501 20.0307 57.7248 19.76 57.7248 19.424V18.99L56.2548 19.284C55.9375 19.3493 55.6948 19.438 55.5268 19.55C55.3681 19.6527 55.2888 19.8253 55.2888 20.068ZM62.1939 22V15H63.9159L63.9859 16.316C64.2005 15.8307 64.5132 15.4667 64.9239 15.224C65.3439 14.9813 65.8245 14.86 66.3659 14.86C67.0939 14.86 67.6959 15.0747 68.1719 15.504C68.6479 15.924 68.8859 16.5587 68.8859 17.408V22H66.9679V17.954C66.9679 17.3567 66.8465 16.946 66.6039 16.722C66.3705 16.4887 66.0719 16.372 65.7079 16.372C65.4465 16.372 65.1899 16.4373 64.9379 16.568C64.6952 16.6893 64.4945 16.89 64.3359 17.17C64.1865 17.45 64.1119 17.8233 64.1119 18.29V22H62.1939ZM75.9451 15V16.428H73.7051V19.718C73.7051 20.054 73.7891 20.3013 73.9571 20.46C74.1345 20.6093 74.3725 20.684 74.6711 20.684C74.9138 20.684 75.1191 20.6513 75.2871 20.586C75.4645 20.5113 75.6231 20.4133 75.7631 20.292L76.0711 21.566C75.8378 21.7433 75.5531 21.8833 75.2171 21.986C74.8905 22.0887 74.5405 22.14 74.1671 22.14C73.4671 22.14 72.8931 21.9813 72.4451 21.664C72.0065 21.3373 71.7871 20.7913 71.7871 20.026V16.428H70.4991V15H71.7871V13.39L73.7051 12.858V15H75.9451ZM82.3621 22V15H84.0841L84.1541 16.26C84.3874 15.7933 84.7047 15.4433 85.1061 15.21C85.5167 14.9767 85.9694 14.86 86.4641 14.86C86.9681 14.86 87.4207 14.9767 87.8221 15.21C88.2327 15.434 88.5407 15.7793 88.7461 16.246C88.9607 15.7793 89.2921 15.434 89.7401 15.21C90.1881 14.9767 90.6501 14.86 91.1261 14.86C91.5834 14.86 91.9987 14.9533 92.3721 15.14C92.7547 15.3267 93.0581 15.6067 93.2821 15.98C93.5061 16.3533 93.6181 16.8293 93.6181 17.408V22H91.7001V17.786C91.7001 17.2727 91.5834 16.9087 91.3501 16.694C91.1261 16.4793 90.8414 16.372 90.4961 16.372C90.0667 16.372 89.7027 16.5307 89.4041 16.848C89.1054 17.156 88.9561 17.618 88.9561 18.234V22H87.0381V17.786C87.0381 17.2727 86.9214 16.9087 86.6881 16.694C86.4641 16.4793 86.1747 16.372 85.8201 16.372C85.5774 16.372 85.3347 16.4373 85.0921 16.568C84.8587 16.6987 84.6627 16.904 84.5041 17.184C84.3547 17.464 84.2801 17.8327 84.2801 18.29V22H82.3621ZM102.337 15L99.5087 22.434C99.2847 23.0687 99.0327 23.5727 98.7527 23.946C98.482 24.3287 98.1647 24.5993 97.8007 24.758C97.446 24.926 97.0213 25.01 96.5267 25.01C96.1627 25.01 95.8267 24.968 95.5187 24.884C95.22 24.8 94.9587 24.6833 94.7347 24.534L95.1407 23.148C95.4673 23.4093 95.878 23.54 96.3727 23.54C96.6433 23.54 96.872 23.484 97.0587 23.372C97.2453 23.26 97.404 23.036 97.5347 22.7L97.7727 22.098L97.0027 20.278L94.8607 15H96.9887L98.3187 19.2L98.6827 20.6L99.1167 19.116L100.391 15H102.337ZM116.92 15H118.964L116.724 22H114.512L112.986 17.24L111.516 22H109.304L107.064 15H109.108L110.508 20.362L112.062 15H113.966L115.534 20.362L116.92 15ZM123.63 22.14C122.529 22.14 121.647 21.8227 120.984 21.188C120.321 20.544 119.99 19.648 119.99 18.5C119.99 17.7347 120.139 17.0813 120.438 16.54C120.737 15.9987 121.152 15.5833 121.684 15.294C122.225 15.0047 122.841 14.86 123.532 14.86C124.241 14.86 124.843 15.0047 125.338 15.294C125.833 15.574 126.211 15.9613 126.472 16.456C126.733 16.9413 126.864 17.4967 126.864 18.122C126.864 18.3087 126.859 18.486 126.85 18.654C126.841 18.822 126.827 18.9713 126.808 19.102H121.866C121.941 19.6433 122.127 20.0493 122.426 20.32C122.734 20.5813 123.131 20.712 123.616 20.712C124.027 20.712 124.358 20.6327 124.61 20.474C124.862 20.3153 125.058 20.096 125.198 19.816L126.724 20.404C126.5 20.9547 126.108 21.384 125.548 21.692C124.988 21.9907 124.349 22.14 123.63 22.14ZM123.518 16.274C122.613 16.274 122.067 16.7733 121.88 17.772H125.03C124.974 17.2867 124.815 16.918 124.554 16.666C124.302 16.4047 123.957 16.274 123.518 16.274ZM133.025 22.14C132.465 22.14 131.98 21.9953 131.569 21.706C131.168 21.4073 130.869 21.02 130.673 20.544L130.603 22H128.909V11.934H130.827V16.19C131.033 15.798 131.322 15.4807 131.695 15.238C132.078 14.986 132.54 14.86 133.081 14.86C133.641 14.86 134.141 15.0047 134.579 15.294C135.027 15.5833 135.377 16.0033 135.629 16.554C135.891 17.0953 136.021 17.7487 136.021 18.514C136.021 19.2793 135.891 19.9327 135.629 20.474C135.377 21.006 135.023 21.4167 134.565 21.706C134.117 21.9953 133.604 22.14 133.025 22.14ZM132.451 20.67C132.974 20.67 133.38 20.488 133.669 20.124C133.959 19.7507 134.103 19.2093 134.103 18.5C134.103 17.7907 133.959 17.254 133.669 16.89C133.38 16.5167 132.979 16.33 132.465 16.33C131.971 16.33 131.574 16.5307 131.275 16.932C130.977 17.324 130.827 17.8513 130.827 18.514C130.827 19.1953 130.977 19.7273 131.275 20.11C131.574 20.4833 131.966 20.67 132.451 20.67ZM140.907 22.14C140.197 22.14 139.549 22.014 138.961 21.762C138.382 21.51 137.911 21.1553 137.547 20.698L138.653 19.578C138.877 19.914 139.175 20.1893 139.549 20.404C139.922 20.6187 140.365 20.726 140.879 20.726C141.243 20.726 141.532 20.6747 141.747 20.572C141.971 20.46 142.083 20.2873 142.083 20.054C142.083 19.9047 142.031 19.7787 141.929 19.676C141.826 19.564 141.621 19.4753 141.313 19.41L140.081 19.158C139.269 18.99 138.69 18.738 138.345 18.402C138.009 18.0567 137.841 17.6133 137.841 17.072C137.841 16.6893 137.953 16.33 138.177 15.994C138.41 15.658 138.755 15.3873 139.213 15.182C139.67 14.9673 140.239 14.86 140.921 14.86C142.339 14.86 143.357 15.294 143.973 16.162L142.825 17.282C142.619 16.9553 142.349 16.708 142.013 16.54C141.686 16.3627 141.341 16.274 140.977 16.274C140.155 16.274 139.745 16.5027 139.745 16.96C139.745 17.1093 139.81 17.24 139.941 17.352C140.071 17.4547 140.309 17.5433 140.655 17.618L142.083 17.912C142.773 18.052 143.268 18.29 143.567 18.626C143.865 18.9527 144.015 19.3493 144.015 19.816C144.015 20.488 143.744 21.0433 143.203 21.482C142.671 21.9207 141.905 22.14 140.907 22.14ZM146.93 13.992C146.137 13.992 145.74 13.6513 145.74 12.97C145.74 12.2793 146.137 11.934 146.93 11.934C147.724 11.934 148.12 12.2793 148.12 12.97C148.12 13.6513 147.724 13.992 146.93 13.992ZM147.882 15V22H145.964V15H147.882ZM155.053 15V16.428H152.813V19.718C152.813 20.054 152.897 20.3013 153.065 20.46C153.243 20.6093 153.481 20.684 153.779 20.684C154.022 20.684 154.227 20.6513 154.395 20.586C154.573 20.5113 154.731 20.4133 154.871 20.292L155.179 21.566C154.946 21.7433 154.661 21.8833 154.325 21.986C153.999 22.0887 153.649 22.14 153.275 22.14C152.575 22.14 152.001 21.9813 151.553 21.664C151.115 21.3373 150.895 20.7913 150.895 20.026V16.428H149.607V15H150.895V13.39L152.813 12.858V15H155.053ZM160.019 22.14C158.918 22.14 158.036 21.8227 157.373 21.188C156.71 20.544 156.379 19.648 156.379 18.5C156.379 17.7347 156.528 17.0813 156.827 16.54C157.126 15.9987 157.541 15.5833 158.073 15.294C158.614 15.0047 159.23 14.86 159.921 14.86C160.63 14.86 161.232 15.0047 161.727 15.294C162.222 15.574 162.6 15.9613 162.861 16.456C163.122 16.9413 163.253 17.4967 163.253 18.122C163.253 18.3087 163.248 18.486 163.239 18.654C163.23 18.822 163.216 18.9713 163.197 19.102H158.255C158.33 19.6433 158.516 20.0493 158.815 20.32C159.123 20.5813 159.52 20.712 160.005 20.712C160.416 20.712 160.747 20.6327 160.999 20.474C161.251 20.3153 161.447 20.096 161.587 19.816L163.113 20.404C162.889 20.9547 162.497 21.384 161.937 21.692C161.377 21.9907 160.738 22.14 160.019 22.14ZM159.907 16.274C159.002 16.274 158.456 16.7733 158.269 17.772H161.419C161.363 17.2867 161.204 16.918 160.943 16.666C160.691 16.4047 160.346 16.274 159.907 16.274Z"
            fill="white"
          />
          <rect
            x="1.5"
            y="1.5"
            width="192"
            height="31"
            rx="5.5"
            stroke="#E09143"
          />
        </g>
        <defs>
          <filter
            id="filter0_d"
            x="0"
            y="0"
            width="197"
            height="36"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            />
            <feOffset dx="1" dy="1" />
            <feGaussianBlur stdDeviation="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 0"
            />
            <feBlend
              mode="normal"
              in2="BackgroundImageFix"
              result="effect1_dropShadow"
            />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="effect1_dropShadow"
              result="shape"
            />
          </filter>
        </defs>
      </svg>
    </>
  )
}
